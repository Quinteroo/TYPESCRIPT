


//! C√ìMO HA FUNCIONADO TRADICIONALMENTE INTERNET CON PHP??
teniendo en cuenta las tres cosas que nos hace falta

- el analizador de PHP (m√≥dulo CGI o servidor) >> programa que interpreta y ejecuta el c√≥digo PHP en el servidor
- un servidor web >> software que gestiona las peticiones HTTP y sirve los archivos adecuados a los clientes (navegadores).
- un navegador web >> es el software que el usuario utiliza para acceder a las p√°ginas webs

1. desde el navegador preguntamos por medio de internet que quiere visitar pagine.php
2. el servidor, que puede ser Apache o Ngix busca el documento.
3. el servidor le pide a PHP que ejecute el archivo PHP que ha encontrado
4. PHP llama a la base de datos, si lo necesita, y genera el html que le devuelve al servidor
5. el servidor se la entrega al navegador del usuario.


//! EL SERVIDOR
El servidor en este caso funciona como un enlace.
El serivdor est√° dividido en dos partes:

//* servidor (software) como Apache o Ngix
El software de servidor es un programa que gestiona peticiones y entrega contenido.



//* servidor (hardware) el "ordenador" donde se ejecuta
un servidor es un ordenador, pero no es cualquier ordenador. 

Es una m√°quina configurada espec√≠ficamente para almacenar, procesar y servir contenido a otros dispositivos a trav√©s de internet 
o de una red privada.

En t√©rminos f√≠sicos, un servidor puede ser:
- Un ordenador potente en un centro de datos de una empresa.
- Un ordenador en tu casa si lo configuras para servir p√°ginas web.
- Un servidor en la nube (como AWS, Google Cloud, DigitalOcean).



//! ¬øDONDE EST√Å PHP?
PHP debe estar instalado en el servidor.
üí° Opciones para tener PHP en un servidor:
üîπ En un hosting compartido (los proveedores ya tienen PHP instalado).
üîπ En un servidor dedicado o VPS, donde instalas PHP manualmente.
üîπ En tu PC con un servidor local usando herramientas como:
      - XAMPP (Windows, Mac, Linux)
      - MAMP (Mac)
      - LAMP (Linux)
      - WAMP (Windows)



//! ¬øD√ìNDE EST√Å LA BASE DE DATOS?
1Ô∏è‚É£ En el mismo servidor f√≠sico que el servidor web (opci√≥n com√∫n en peque√±os proyectos).
2Ô∏è‚É£ En un servidor f√≠sico separado (opci√≥n usada en grandes empresas para rendimiento y seguridad).
3Ô∏è‚É£ En la nube (Ejemplo: bases de datos gestionadas como AWS RDS, Google Cloud SQL, PlanetScale).
